AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''
  ComeInDBHost:
    Type: String
    Description: db host
    Default: 'artemis.cluster-csl5nc2u4rsg.ap-northeast-1.rds.amazonaws.com'
  ComeInDBPort:
    Type: String
    Description: db port
    Default: '5432'
  ComeInDBUsername:
    Type: String
    Description: db username
    Default: 'postgres'
  ComeInDBPassword:
    Type: String
    Description: db password
    Default: 'Dg8HtJjwEJDugpqTx5dR'
  ComeInDBInstance:
    Type: String
    Description: db instance
    Default: 'comein'

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole

Resources:
  GetHelloWorldFunc:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-GetHelloWorldFunc'
      Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
      Environment:
        Variables:
          spring_cloud_function_definition: getHelloWorld
          DB_HOST: !Ref ComeInDBHost
          DB_PORT: !Ref ComeInDBPort
          DB_INSTANCE: !Ref ComeInDBInstance
          DB_USERNAME: !Ref ComeInDBUsername
          DB_PASSWORD: !Ref ComeInDBPassword
      Runtime: java11
      Timeout: 30
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
